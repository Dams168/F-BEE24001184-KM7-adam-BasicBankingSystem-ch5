{
  "openapi": "3.0.3",
  "info": {
    "title": "Basic Banking System - OpenAPI 3.0",
    "description": "Ini adalah dokumentasi menggunakan swagger untuk challenge 5 Basic Banking System Binar Academy x MSIB \n\n Some useful links: \n\n [Github Repository](https://github.com/Dams168/F-BEE24001184-KM7-adam-BasicBankingSystem-ch5)",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "adamrohman2003@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  },
  "servers": [
    {
      "url": "https://localhost:3000/api/v1"
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "Operations about users"
    },
    {
      "name": "accounts",
      "description": "Operations about accounts"
    },
    {
      "name": "transactions",
      "description": "Operations about transactions"
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "tags": ["Users"],
        "summary": "Get all users",
        "operationId": "getUsers",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Users"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Users"],
        "summary": "Create user",
        "operationId": "createUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Users"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}": {
      "get": {
        "tags": ["Users"],
        "summary": "Get user by id",
        "operationId": "getUserById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of user to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          }
        }
      }
    },
    "/accounts": {
      "get": {
        "tags": ["accounts"],
        "summary": "Get all accounts",
        "operationId": "getAccounts",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/bank_accounts"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["accounts"],
        "summary": "Create account",
        "operationId": "createAccount",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/bank_accounts"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/bank_accounts"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}": {
      "get": {
        "tags": ["accounts"],
        "summary": "Get account by id",
        "operationId": "getAccountById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of account to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/bank_accounts"
                }
              }
            }
          }
        }
      }
    },
    "/transactions": {
      "get": {
        "tags": ["transactions"],
        "summary": "Get all transactions",
        "operationId": "getTransactions",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/transactions"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["transactions"],
        "summary": "Create transaction",
        "operationId": "createTransaction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/transactions"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/transactions"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/{transaction_id}": {
      "get": {
        "tags": ["transactions"],
        "summary": "Get transaction by id",
        "operationId": "getTransactionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of transaction to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/transactions"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Users": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "name": {
            "type": "string",
            "format": "string",
            "example": "Adam"
          },
          "email": {
            "type": "string",
            "format": "string",
            "example": "adam@mail.com"
          },
          "password": {
            "type": "string",
            "format": "string",
            "example": "password"
          }
        },
        "xml": {
          "name": "Users"
        }
      },
      "Profiles": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "user_id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "identity_type": {
            "type": "string",
            "format": "string",
            "example": "KTP"
          },
          "identity_number": {
            "type": "string",
            "format": "string",
            "example": "1234567890"
          },
          "address": {
            "type": "string",
            "format": "string",
            "example": "jl. abc no. 123"
          }
        },
        "xml": {
          "name": "Profiles"
        }
      },
      "bank_accounts": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "user_id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "bank_name": {
            "type": "string",
            "format": "string",
            "example": "ABC"
          },
          "bank_account_number": {
            "type": "string",
            "format": "string",
            "example": "9876543210"
          },
          "balance": {
            "type": "integer",
            "format": "int64",
            "example": 1000000
          }
        },
        "xml": {
          "name": "bank_accounts"
        }
      },
      "transactions": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "source_account_id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "destination_account_id": {
            "type": "integer",
            "format": "int64",
            "example": 2
          },
          "amount": {
            "type": "integer",
            "format": "int64",
            "example": 100000
          }
        },
        "xml": {
          "name": "transactions"
        }
      }
    }
  }
}
